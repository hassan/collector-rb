require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator.  If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails.  There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.
#
# Compared to earlier versions of this generator, there is very limited use of
# stubs and message expectations in this spec.  Stubs are only used when there
# is no simpler way to get a handle on the object needed for the example.
# Message expectations are only used when there is no simpler way to specify
# that an instance is receiving a specific message.
#
# Also compared to earlier versions of this generator, there are no longer any
# expectations of assigns and templates rendered. These features have been
# removed from Rails core in Rails 5, but can be added back in via the
# `rails-controller-testing` gem.

RSpec.describe NotificationsController, type: :controller do

  # This should return the minimal set of attributes required to create a valid
  # Notification. As you add validations to Notification, be sure to
  # adjust the attributes here as well.
  let(:raw_params) {
    JSON.parse '{"UnsubscribeURL":"https://sns.us-west-2.amazonaws.com/?Action=Unsubscribe&SubscriptionArn=arn:aws:sns:us-west-2:917568727384:config-topic-us-west-2:248de42d-a6c9-4a47-aaa0-b6680283416c","Type":"Notification","TopicArn":"arn:aws:sns:us-west-2:917568727384:config-topic-us-west-2","Timestamp":"2017-10-12T21:15:03.830Z","Subject":"[AWS Config:us-west-2] Configuration Snapshot Delivery Started for Account 917568727384","SigningCertURL":"https://sns.us-west-2.amazonaws.com/SimpleNotificationService-433026a4050d206028891664da859041.pem","SignatureVersion":"1","Signature":"G6I+gMVv4tM4yD0K7c81WPMENeZfMC86/hDgHkO10KKw1L86llMwiTXrgnwZO3P/CVUG2dfOf62/2TPR1WyM0UoG0o2WLCglZJcoubXLGgSp2+AsqiJka+PP+LElsvu65RG02kI1rb4R3QGf8TY2V9p0DwkpDmGMK6tbeIABzuxO19CxbFzX2VoHZKB/zbnUaapsh5RgLKWmEJUYF87bLIUetfn0OnXuCdXrLuPF/jg4iVvhq/wBMgPcNlIgCCzyIE/KSt61W7dDlENcRf+TtHDgnDwGSgdpIQCc/5yDKissPuoCCA1Mt16IidqICJr9dqibwjAhI2oY0LtfNu8sdg==","MessageId":"24d34071-463d-51ac-9a22-12289baaa063","Message":"{\"configSnapshotId\":\"de4b0642-2923-43fb-8a3b-5dd71fa1cfe1\",\"notificationCreationTime\":\"2017-10-12T21:15:03.556Z\",\"messageType\":\"ConfigurationSnapshotDeliveryStarted\",\"recordVersion\":\"1.1\"}"}'
  }

  let(:valid_attributes) {
    skip("Add a hash of attributes valid for your model")
  }

  let(:invalid_attributes) {
    skip("Add a hash of attributes invalid for your model")
  }

  # This should return the minimal set of values that should be in the session
  # in order to pass any filters (e.g. authentication) defined in
  # NotificationsController. Be sure to keep this updated too.
  let(:valid_session) { {} }

  describe "POST #create" do
    context "with valid params" do
      it "creates a new Notification" do
        expect {
          post :create, params: raw_params, session: valid_session
        }.to change(Notification, :count).by(1)
      end

=begin
      it "renders a JSON response with the new notification" do

        post :create, params: {notification: valid_attributes}, session: valid_session
        expect(response).to have_http_status(:created)
        expect(response.content_type).to eq('application/json')
        expect(response.location).to eq(notification_url(Notification.last))
      end
=end
    end
=begin
    context "with invalid params" do
      it "renders a JSON response with errors for the new notification" do

        post :create, params: {notification: invalid_attributes}, session: valid_session
        expect(response).to have_http_status(:unprocessable_entity)
        expect(response.content_type).to eq('application/json')
      end
    end
=end
  end
end
